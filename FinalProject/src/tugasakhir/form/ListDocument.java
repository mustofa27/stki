/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Preprocess.java
 *
 * Created on Dec 28, 2011, 3:17:45 PM
 */
package tugasakhir.form;

import tugasakhir.process.DocumentDisplayer;
import java.awt.ComponentOrientation;
import java.io.IOException;
import java.util.List;
import org.apache.lucene.queryParser.ParseException;
import tugasakhir.process.ExportToExcel;

/**
 *
 * @author Indra
 */
public class ListDocument extends javax.swing.JFrame{

    /** Creates new form Preprocess */
    public ListDocument(java.awt.Frame parent) {
//        super(parent.getGraphicsConfiguration());
        try {
            initialize();
        } catch (IOException | ParseException ex) {
        }
        
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        identitasSplitPane = new javax.swing.JSplitPane();
        kitabScrollPane = new javax.swing.JScrollPane();
        kitabTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSplitPane1 = new javax.swing.JSplitPane();
        nassScrollPane = new javax.swing.JScrollPane();
        nassTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(tugasakhir.form.App.class).getContext().getResourceMap(ListDocument.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 450));
        jPanel1.setLayout(new java.awt.BorderLayout());

        identitasSplitPane.setDividerLocation(150);
        identitasSplitPane.setMaximumSize(new java.awt.Dimension(300, 450));
        identitasSplitPane.setName("identitasSplitPane"); // NOI18N
        identitasSplitPane.setPreferredSize(new java.awt.Dimension(200, 450));

        kitabScrollPane.setMaximumSize(new java.awt.Dimension(60, 450));
        kitabScrollPane.setMinimumSize(new java.awt.Dimension(60, 450));
        kitabScrollPane.setName("kitabScrollPane"); // NOI18N
        kitabScrollPane.setPreferredSize(new java.awt.Dimension(60, 450));

        kitabTable.setFont(resourceMap.getFont("kitabTable.font")); // NOI18N
        kitabTable.setModel(this.idKitabTableModel);
        kitabTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        kitabTable.setName("kitabTable"); // NOI18N
        kitabTable.setPreferredSize(new java.awt.Dimension(60, 450));
        kitabTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        kitabTable.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        kitabTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kitabTableMouseClicked(evt);
            }
        });
        kitabScrollPane.setViewportView(kitabTable);

        identitasSplitPane.setLeftComponent(kitabScrollPane);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(this.halKitabTableModel);
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        identitasSplitPane.setRightComponent(jScrollPane1);

        jPanel1.add(identitasSplitPane, java.awt.BorderLayout.WEST);

        jSplitPane1.setDividerLocation(380);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        nassScrollPane.setMaximumSize(new java.awt.Dimension(480, 450));
        nassScrollPane.setMinimumSize(new java.awt.Dimension(480, 450));
        nassScrollPane.setName("nassScrollPane"); // NOI18N
        nassScrollPane.setPreferredSize(new java.awt.Dimension(430, 450));

        nassTextArea.setColumns(20);
        nassTextArea.setFont(resourceMap.getFont("nassTextArea.font")); // NOI18N
        nassTextArea.setLineWrap(true);
        nassTextArea.setRows(5);
        nassTextArea.setWrapStyleWord(true);
        nassTextArea.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);;
        nassTextArea.setName("nassTextArea"); // NOI18N
        nassScrollPane.setViewportView(nassTextArea);

        jSplitPane1.setLeftComponent(nassScrollPane);

        jScrollPane2.setName("jScrollPane2"); // NOI18N
        jScrollPane2.setPreferredSize(new java.awt.Dimension(200, 200));

        jTable2.setModel(this.termTableModel);
        jTable2.setName("jTable2"); // NOI18N
        jScrollPane2.setViewportView(jTable2);

        jSplitPane1.setRightComponent(jScrollPane2);

        jPanel1.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kitabTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kitabTableMouseClicked

        this.IDKITAB = (String) this.kitabTable.getValueAt(this.kitabTable.getSelectedRow(), 0);
        int[] halKitab = null;
        try {
            halKitab = this.docDisplayer.getHalamanList(this.IDKITAB);
        } catch (IOException | ParseException ex) {
        }
        String[][] halKitabList = new String[halKitab.length][1];
        for (int i = 0; i < halKitabList.length; i++) {
            halKitabList[i][0] = String.valueOf(halKitab[i]);
        }
        this.halKitabTableModel.populateList(halKitabList);
        
    }//GEN-LAST:event_kitabTableMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        
        String halaman = (String) this.jTable1.getValueAt(this.jTable1.getSelectedRow(), this.jTable1.getSelectedColumn());
        
        String nass = this.docDisplayer.getNass(this.IDKITAB, halaman);
        
        this.nassTextArea.setText(nass);
        
        String[] terms = this.docDisplayer.getDocumentTerms(this.IDKITAB, halaman);
        List<String> termCorpus = this.docDisplayer.getCorpusTerms();
        int k = termCorpus.size()/5;
        String[][] termList = new String[k][5];
        
        for (int i = 0; i < termCorpus.size(); i++) {
            
            for (int j = 0; j < k; j++) {
                
                for (int l = 0; l < 5; l++) {
                    if(i<termCorpus.size())
                    termList[j][l] = termCorpus.get(i);
                    i++;
                }
            }
        }
        this.termTableModel.populateList(termList);
        ExportToExcel.expToCSV(this.termTableModel, "D://arabicdocs/data3.xls");
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane identitasSplitPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JScrollPane kitabScrollPane;
    private javax.swing.JTable kitabTable;
    private javax.swing.JScrollPane nassScrollPane;
    private javax.swing.JTextArea nassTextArea;
    // End of variables declaration//GEN-END:variables

    private KitabIdentityTableModel idKitabTableModel;
    private DocIdentityTableModel halKitabTableModel;
    private TermListTableModel termTableModel;
    private DocumentDisplayer docDisplayer;
    private String IDKITAB = "1";
    
    
    private void initialize() throws IOException, ParseException{
        try {
            this.docDisplayer = new DocumentDisplayer("FileIndex");
        } catch (IOException ex) {
        }
        
        this.termTableModel = new TermListTableModel();
        
        String[] idKitabColumnNames = {"ID","Judul"};
        this.idKitabTableModel = new KitabIdentityTableModel();
        this.idKitabTableModel.setColumnName(idKitabColumnNames);
        
        String[][] idKitab = this.docDisplayer.getKitabList();
                
        this.idKitabTableModel.populateList(idKitab);
        //export to excel workbook
        ExportToExcel.expToCSV(this.idKitabTableModel, "D://arabicdocs/data1.xls");
        
        String[] halKitabColumnNames = {"Hal"};
        this.halKitabTableModel = new DocIdentityTableModel();
        this.halKitabTableModel.setColumnName(halKitabColumnNames);
        
        int[] halKitab = this.docDisplayer.getHalamanList("1");
        String[][] halKitabList = new String[halKitab.length][1];
        for (int i = 0; i < halKitabList.length; i++) {
            halKitabList[i][0] = String.valueOf(halKitab[i]);
        }
        this.halKitabTableModel.populateList(halKitabList);
  
        //export to excel workbook
        ExportToExcel.expToCSV(this.halKitabTableModel, "D://arabicdocs/data2.xls");
        
    }
    
}
