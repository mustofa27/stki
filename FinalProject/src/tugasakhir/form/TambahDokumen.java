/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Preprocess.java
 *
 * Created on Dec 28, 2011, 3:17:45 PM
 */
package tugasakhir.form;

import org.apache.lucene.index.CorruptIndexException;
import tugasakhir.process.DocumentDisplayer;
import java.awt.ComponentOrientation;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.lucene.queryParser.ParseException;
import tugasakhir.process.FileIndexer;
import tugasakhir.process.TextFileReader;

/**
 *
 * @author Indra
 */
public class TambahDokumen extends javax.swing.JFrame{

    /** Creates new form Preprocess */
    public TambahDokumen(java.awt.Frame parent) {
//        super(parent.getGraphicsConfiguration());
        try {
            initialize();
        } catch (IOException | ParseException ex) {
        }
        
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        openSplitPane = new javax.swing.JSplitPane();
        openFileTextField = new javax.swing.JTextField();
        openFileButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileContentTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        kitabTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSplitPane2 = new javax.swing.JSplitPane();
        halamanTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(tugasakhir.form.App.class).getContext().getResourceMap(TambahDokumen.class);
        fileChooser.setDialogTitle(resourceMap.getString("fileChooser.dialogTitle")); // NOI18N
        fileChooser.setName("fileChooser"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jPanel1.setMinimumSize(new java.awt.Dimension(600, 450));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 450));
        jPanel1.setLayout(new java.awt.BorderLayout());

        openSplitPane.setDividerLocation(490);
        openSplitPane.setName("openSplitPane"); // NOI18N

        openFileTextField.setText(resourceMap.getString("openFileTextField.text")); // NOI18N
        openFileTextField.setName("openFileTextField"); // NOI18N
        openSplitPane.setLeftComponent(openFileTextField);

        openFileButton.setText(resourceMap.getString("openFileButton.text")); // NOI18N
        openFileButton.setName("openFileButton"); // NOI18N
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileButtonActionPerformed(evt);
            }
        });
        openSplitPane.setRightComponent(openFileButton);

        jPanel1.add(openSplitPane, java.awt.BorderLayout.NORTH);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        fileContentTextArea.setColumns(20);
        fileContentTextArea.setFont(resourceMap.getFont("fileContentTextArea.font")); // NOI18N
        fileContentTextArea.setLineWrap(true);
        fileContentTextArea.setRows(5);
        fileContentTextArea.setWrapStyleWord(true);
        fileContentTextArea.setName("fileContentTextArea"); // NOI18N
        fileContentTextArea.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        jScrollPane1.setViewportView(fileContentTextArea);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, java.awt.BorderLayout.EAST);

        jSplitPane3.setDividerLocation(150);
        jSplitPane3.setName("jSplitPane3"); // NOI18N
        jSplitPane3.setPreferredSize(new java.awt.Dimension(250, 26));

        jSplitPane1.setName("jSplitPane1"); // NOI18N

        kitabTextField.setText(resourceMap.getString("kitabTextField.text")); // NOI18N
        kitabTextField.setName("kitabTextField"); // NOI18N
        jSplitPane1.setRightComponent(kitabTextField);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jSplitPane1.setLeftComponent(jLabel1);

        jSplitPane3.setLeftComponent(jSplitPane1);

        jSplitPane2.setName("jSplitPane2"); // NOI18N

        halamanTextField.setText(resourceMap.getString("halamanTextField.text")); // NOI18N
        halamanTextField.setName("halamanTextField"); // NOI18N
        jSplitPane2.setRightComponent(halamanTextField);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        jSplitPane2.setLeftComponent(jLabel2);

        jSplitPane3.setRightComponent(jSplitPane2);

        jPanel2.add(jSplitPane3, java.awt.BorderLayout.WEST);

        jPanel1.add(jPanel2, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed

        this.openFileTextField.setText("");
        
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            this.openFileTextField.setText(file.getAbsolutePath());
            
            TextFileReader textReader = new TextFileReader(file.getAbsolutePath());
            try {
                this.fileContentTextArea.setText(textReader.Read());
            } catch (IOException ex) {
                this.fileContentTextArea.setText("FILE TIDAK BISA DI BACA");
            }
                
        } else {
            System.out.println("File access cancelled by user.");
        }
    
    }//GEN-LAST:event_openFileButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (halamanTextField.getText().length()==0 || kitabTextField.getText().length()==0) {
            FileIndexer fileIndexer = new FileIndexer("FileIndex");
            fileIndexer.indexFileOrDirectory(this.openFileTextField.getText());
            try {
                fileIndexer.closeIndex();
            } catch (IOException ex) {
                            JOptionPane.showMessageDialog(null, "File: " +this.openFileTextField.getText() +" tidak bisa ditambahakan");
            }
            
            JOptionPane.showMessageDialog(null, "File: " +this.openFileTextField.getText() +" telah ditambahakan");
        }else{
            FileIndexer indexer = new FileIndexer("FileIndex");
            String[] identitasKitab = {this.kitabTextField.getText(),this.halamanTextField.getText()};
            try {
                indexer.indexOneFile(this.openFileTextField.getText(), identitasKitab);
            } catch (CorruptIndexException ex) {
                
            } catch (IOException ex) {
                                            JOptionPane.showMessageDialog(null, "File: " +this.openFileTextField.getText() +" tidak bisa ditambahakan");

            }
            
            JOptionPane.showMessageDialog(null, "File: " +this.openFileTextField.getText() +" telah ditambahakan");

        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTextArea fileContentTextArea;
    private javax.swing.JTextField halamanTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JTextField kitabTextField;
    private javax.swing.JButton openFileButton;
    private javax.swing.JTextField openFileTextField;
    private javax.swing.JSplitPane openSplitPane;
    // End of variables declaration//GEN-END:variables

    private DocIdentityTableModel idKitabTableModel;
    private DocIdentityTableModel halKitabTableModel;
    private DocIdentityTableModel termTableModel;
    private DocumentDisplayer docDisplayer;
    
    
    
    private void initialize() throws IOException, ParseException{
        try {
            this.docDisplayer = new DocumentDisplayer("FileIndex");
        } catch (IOException ex) {
        }
        
        String[] idKitabColumnNames = {"Kitab"};
        this.idKitabTableModel = new DocIdentityTableModel();
        this.idKitabTableModel.setColumnName(idKitabColumnNames);
        
//        int[] idKitab = this.docDisplayer.getKitabList();
//        String[][] idKitabList = new String[idKitab.length][1];
//        for (int i = 0; i < idKitabList.length; i++) {
//            idKitabList[i][0] = String.valueOf(idKitab[i]);
//        }
//        this.idKitabTableModel.populateList(idKitabList);

        String[] halKitabColumnNames = {"Halaman"};
        this.halKitabTableModel = new DocIdentityTableModel();
        this.halKitabTableModel.setColumnName(halKitabColumnNames);
        
        int[] halKitab = this.docDisplayer.getHalamanList("1");
        String[][] halKitabList = new String[halKitab.length][1];
        for (int i = 0; i < halKitabList.length; i++) {
            halKitabList[i][0] = String.valueOf(halKitab[i]);
        }
        this.halKitabTableModel.populateList(halKitabList);
        
        String[] termColumnNames = {"Term"};
        this.termTableModel = new DocIdentityTableModel();
        this.termTableModel.setColumnName(termColumnNames);
    }
    
}
